{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"../workshop.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/sidenav\";\nfunction RegistrationRequestsComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"button\", 8);\n    i0.ɵɵtext(2, \"All users\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationRequestsComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"button\", 9);\n    i0.ɵɵtext(2, \"Registration requests\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationRequestsComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"button\", 10);\n    i0.ɵɵtext(2, \"Add new user\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction RegistrationRequestsComponent_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"table\")(2, \"tr\")(3, \"td\");\n    i0.ɵɵtext(4, \" Username: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function RegistrationRequestsComponent_tr_23_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const user_r4 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.acceptRegister(user_r4));\n    });\n    i0.ɵɵtext(9, \"Accept registration\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", user_r4.username, \" \");\n  }\n}\nexport class RegistrationRequestsComponent {\n  constructor(userService, workshopService, router) {\n    this.userService = userService;\n    this.workshopService = workshopService;\n    this.router = router;\n    this.user_type = 2;\n    this.users = [];\n  }\n  ngOnInit() {\n    this.userService.getAllUsersRequest().subscribe(resp => {\n      this.users = resp;\n    });\n  }\n  changePass() {\n    this.router.navigate(['change-password']);\n  }\n  logout() {\n    sessionStorage.clear();\n    this.router.navigate(['']);\n  }\n  acceptRegister(user) {\n    this.userService.acceptRegistration(user.username).subscribe(resp => {\n      this.userService.getAllUsersRequest().subscribe(resp2 => {\n        this.users = resp2;\n      });\n    });\n  }\n}\nRegistrationRequestsComponent.ɵfac = function RegistrationRequestsComponent_Factory(t) {\n  return new (t || RegistrationRequestsComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.WorkshopService), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegistrationRequestsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationRequestsComponent,\n  selectors: [[\"app-registration-requests\"]],\n  decls: 24,\n  vars: 4,\n  consts: [[1, \"example-container\"], [\"mode\", \"side\", \"opened\", \"\"], [\"routerLink\", \"/user-info\"], [\"routerLink\", \"/user-workshops\"], [\"routerLink\", \"/become-organizer\"], [4, \"ngIf\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/edit-users\"], [\"routerLink\", \"/registration-requests\"], [\"routerLink\", \"/insert-new-user\"]],\n  template: function RegistrationRequestsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1)(2, \"table\")(3, \"tr\")(4, \"button\", 2);\n      i0.ɵɵtext(5, \"Profile\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"tr\")(7, \"button\", 3);\n      i0.ɵɵtext(8, \"Workshops\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"tr\")(10, \"button\", 4);\n      i0.ɵɵtext(11, \"Become organizer\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, RegistrationRequestsComponent_tr_12_Template, 3, 0, \"tr\", 5);\n      i0.ɵɵtemplate(13, RegistrationRequestsComponent_tr_13_Template, 3, 0, \"tr\", 5);\n      i0.ɵɵtemplate(14, RegistrationRequestsComponent_tr_14_Template, 3, 0, \"tr\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"form\")(16, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function RegistrationRequestsComponent_Template_button_click_16_listener() {\n        return ctx.changePass();\n      });\n      i0.ɵɵtext(17, \"Change password\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"form\")(19, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function RegistrationRequestsComponent_Template_button_click_19_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(20, \"Logout\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"mat-sidenav-content\")(22, \"table\");\n      i0.ɵɵtemplate(23, RegistrationRequestsComponent_tr_23_Template, 10, 1, \"tr\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngIf\", ctx.user_type == 2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.user_type == 2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.user_type == 2);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.users);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i3.RouterLink, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i6.MatSidenav, i6.MatSidenavContainer, i6.MatSidenavContent],\n  styles: [\".example-container[_ngcontent-%COMP%] {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    background: lightblue;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0cmF0aW9uLXJlcXVlc3RzL3JlZ2lzdHJhdGlvbi1yZXF1ZXN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixTQUFTO0lBQ1QsT0FBTztJQUNQLFFBQVE7SUFDUixxQkFBcUI7RUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYmFja2dyb3VuZDogbGlnaHRibHVlO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;IAYYA,0BAA2B;IACUA,yBAAS;IAAAA,iBAAS;;;;;IAExDA,0BAA2B;IACsBA,qCAAqB;IAAAA,iBAAS;;;;;IAE9EA,0BAAyB;IACiBA,4BAAY;IAAAA,iBAAS;;;;;;IAmB/DA,0BAAsD;IAItCA,2BACJ;IAAAA,iBAAK;IACLA,0BAAI;IACAA,YACJ;IAAAA,iBAAK;IACLA,0BAAI;IACQA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAACA,mCAAmB;IAAAA,iBAAS;;;;IAHnEA,eACJ;IADIA,iDACJ;;;ACnCxB,OAAM,MAAOC,6BAA6B;EAExCC,YAAoBC,WAAwB,EAAUC,eAAgC,EAC5EC,MAAe;IADL,gBAAW,GAAXF,WAAW;IAAuB,oBAAe,GAAfC,eAAe;IAC3D,WAAM,GAANC,MAAM;IAChB,cAAS,GAAmB,CAAC;IAC7B,UAAK,GAAmB,EAAE;EAFG;EAG7BC,QAAQ;IACN,IAAI,CAACH,WAAW,CAACI,kBAAkB,EAAE,CAACC,SAAS,CAAEC,IAAI,IAAG;MACtD,IAAI,CAACC,KAAK,GAAGD,IAAc;IAC7B,CAAC,CAAC;EACJ;EACAE,UAAU;IACR,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC3C;EACAC,MAAM;IACJC,cAAc,CAACC,KAAK,EAAE;IACtB,IAAI,CAACV,MAAM,CAACO,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;EACAI,cAAc,CAACC,IAAI;IACjB,IAAI,CAACd,WAAW,CAACe,kBAAkB,CAACD,IAAI,CAACE,QAAQ,CAAC,CAACX,SAAS,CAAEC,IAAI,IAAG;MACnE,IAAI,CAACN,WAAW,CAACI,kBAAkB,EAAE,CAACC,SAAS,CAAEY,KAAK,IAAG;QACvD,IAAI,CAACV,KAAK,GAAGU,KAAe;MAC9B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;AAxBWnB,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;QAA7BA,6BAA6B;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDX1CzB,gDAAiD;MAIDA,uBAAO;MAAAA,iBAAS;MAEpDA,0BAAI;MACqCA,yBAAS;MAAAA,iBAAS;MAE3DA,0BAAI;MACuCA,iCAAgB;MAAAA,iBAAS;MAEpEA,8EAEI;MACLA,8EAEM;MACLA,8EAEK;MAGTA,iBAAQ;MAEJA,6BAAM;MACMA;QAAA,OAAS0B,gBAAY;MAAA,EAAC;MAAC1B,gCAAe;MAAAA,iBAAS;MAG3DA,6BAAM;MACMA;QAAA,OAAS0B,YAAQ;MAAA,EAAC;MAAC1B,uBAAM;MAAAA,iBAAS;MAMtDA,4CAAqB;MAEbA,+EAgBK;MACTA,iBAAQ;;;MA3CCA,gBAAoB;MAApBA,yCAAoB;MAGrBA,eAAoB;MAApBA,yCAAoB;MAGnBA,eAAkB;MAAlBA,yCAAkB;MAoBFA,eAAS;MAATA,mCAAS","names":["i0","RegistrationRequestsComponent","constructor","userService","workshopService","router","ngOnInit","getAllUsersRequest","subscribe","resp","users","changePass","navigate","logout","sessionStorage","clear","acceptRegister","user","acceptRegistration","username","resp2","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\registration-requests\\registration-requests.component.html","C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\registration-requests\\registration-requests.component.ts"],"sourcesContent":["<mat-sidenav-container class=\"example-container\">\n    <mat-sidenav mode=\"side\" opened>\n        <table>\n            <tr>\n                <button routerLink=\"/user-info\">Profile</button>\n            </tr>\n            <tr>\n                <button routerLink=\"/user-workshops\">Workshops</button>\n            </tr>\n            <tr>\n                <button routerLink=\"/become-organizer\">Become organizer</button>\n            </tr>\n            <tr *ngIf=\"user_type == 2\">\n                <button routerLink=\"/edit-users\">All users</button>\n           </tr>\n           <tr *ngIf=\"user_type == 2\">\n                <button routerLink=\"/registration-requests\">Registration requests</button>\n            </tr>\n            <tr *ngIf=\"user_type==2\">\n                <button routerLink=\"/insert-new-user\">Add new user</button>\n            </tr>\n           \n\n        </table>\n        \n            <form>\n                <button (click)=\"changePass()\">Change password</button>\n            </form>\n        \n            <form>\n                <button (click)=\"logout()\">Logout</button>\n            </form>\n        \n\n\n    </mat-sidenav>\n    <mat-sidenav-content>\n        <table>\n            <tr *ngFor=\"let user of users;let userIndex = index;\">\n                <table>\n                    <tr>\n                        <td>\n                            Username:\n                        </td>\n                        <td>\n                            {{user.username}}\n                        </td>\n                        <td>\n                            <button (click)=\"acceptRegister(user)\">Accept registration</button>\n                        </td>\n                        \n                    </tr>\n\n                </table>\n            </tr>\n        </table>\n    </mat-sidenav-content>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../models/user';\nimport { UserService } from '../user.service';\nimport { WorkshopService } from '../workshop.service';\n\n@Component({\n  selector: 'app-registration-requests',\n  templateUrl: './registration-requests.component.html',\n  styleUrls: ['./registration-requests.component.css']\n})\nexport class RegistrationRequestsComponent implements OnInit {\n\n  constructor(private userService: UserService, private workshopService: WorkshopService,\n    private router : Router) { }\n  user_type : number | null = 2;\n  users : User[] | null = []\n  ngOnInit(): void {\n    this.userService.getAllUsersRequest().subscribe((resp)=>{\n      this.users = resp as User[];\n    })\n  }\n  changePass(){\n    this.router.navigate(['change-password']);\n  }\n  logout(){\n    sessionStorage.clear();\n    this.router.navigate(['']);\n  }\n  acceptRegister(user){\n    this.userService.acceptRegistration(user.username).subscribe((resp)=>{\n      this.userService.getAllUsersRequest().subscribe((resp2)=>{\n        this.users = resp2 as User[];\n      })\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}