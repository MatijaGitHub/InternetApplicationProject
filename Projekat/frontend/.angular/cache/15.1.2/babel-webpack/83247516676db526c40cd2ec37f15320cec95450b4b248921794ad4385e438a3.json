{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class ChangePasswordComponent {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n    this.repeat_password = \"\";\n    this.new_password = \"\";\n    this.old_password = \"\";\n    this.errMsg = \"\";\n    this.response = \"\";\n  }\n  ngOnInit() {}\n  changePassword() {\n    this.errMsg = \"\";\n    this.response = \"\";\n    if (this.repeat_password == \"\" || this.new_password == \"\" || this.old_password == \"\") {\n      this.errMsg = \"Enter all fields!\";\n      return;\n    }\n    if (this.new_password != this.repeat_password) {\n      this.errMsg = \"Passwords dont match!\";\n      return;\n    }\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[@$!%*?&])(?=.*\\d)[A-Za-z][A-Za-z\\d@$!%*?&]{7,15}$/;\n    if (!passwordRegex.test(this.new_password)) {\n      this.errMsg = \"Passwords in wrong format!\";\n      return;\n    }\n    let username = sessionStorage.getItem('username');\n    this.userService.changePassword(this.old_password, username, this.new_password).subscribe(resp => {\n      this.response = resp['message'];\n      if (this.response == \"Password changed!\") {\n        this.logout();\n      }\n    });\n  }\n  logout() {\n    sessionStorage.clear();\n    this.router.navigate(['']);\n  }\n}\nChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n  return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n};\nChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangePasswordComponent,\n  selectors: [[\"app-change-password\"]],\n  decls: 30,\n  vars: 5,\n  consts: [[\"type\", \"text\", \"name\", \"old_password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"new_password\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"repeat_password\", 3, \"ngModel\", \"ngModelChange\"], [\"colspan\", \"2\"], [3, \"click\"], [\"href\", \"user\"]],\n  template: function ChangePasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"table\")(2, \"tr\")(3, \"td\");\n      i0.ɵɵtext(4, \" Old passoword: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"td\")(6, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.old_password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"tr\")(8, \"td\");\n      i0.ɵɵtext(9, \" New password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"td\")(11, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.new_password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"tr\")(13, \"td\");\n      i0.ɵɵtext(14, \" Repeat new password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"td\")(16, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.repeat_password = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"tr\")(18, \"td\", 3)(19, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ChangePasswordComponent_Template_button_click_19_listener() {\n        return ctx.changePassword();\n      });\n      i0.ɵɵtext(20, \"Submit\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(21, \"hr\");\n      i0.ɵɵelementStart(22, \"tr\")(23, \"td\", 3)(24, \"a\", 5);\n      i0.ɵɵtext(25, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtext(27);\n      i0.ɵɵelement(28, \"br\");\n      i0.ɵɵtext(29);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.old_password);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.new_password);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.repeat_password);\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate1(\"\\n\", ctx.errMsg, \"\\n\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\\n\", ctx.response, \"\\n\");\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,uBAAuB;EAElCC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAC5D,oBAAe,GAAiB,EAAE;IAClC,iBAAY,GAAiB,EAAE;IAC/B,iBAAY,GAAiB,EAAE;IAC/B,WAAM,GAAiB,EAAE;IACzB,aAAQ,GAAgB,EAAE;EAL8C;EAMxEC,QAAQ,IACR;EAEAC,cAAc;IACZ,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAG,IAAI,CAACC,eAAe,IAAI,EAAE,IAAI,IAAI,CAACC,YAAY,IAAI,EAAE,IAAI,IAAI,CAACC,YAAY,IAAI,EAAE,EAAC;MAClF,IAAI,CAACJ,MAAM,GAAG,mBAAmB;MACjC;;IAEF,IAAG,IAAI,CAACG,YAAY,IAAI,IAAI,CAACD,eAAe,EAAC;MAC3C,IAAI,CAACF,MAAM,GAAG,uBAAuB;MACrC;;IAEF,MAAMK,aAAa,GAAW,qEAAqE;IACnG,IAAG,CAACA,aAAa,CAACC,IAAI,CAAC,IAAI,CAACH,YAAY,CAAC,EAAC;MACxC,IAAI,CAACH,MAAM,GAAG,4BAA4B;MAC1C;;IAEF,IAAIO,QAAQ,GAAGC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAI,CAACb,WAAW,CAACG,cAAc,CAAC,IAAI,CAACK,YAAY,EAACG,QAAQ,EAAE,IAAI,CAACJ,YAAY,CAAC,CAACO,SAAS,CAAEC,IAAI,IAAG;MAC7F,IAAI,CAACV,QAAQ,GAAGU,IAAI,CAAC,SAAS,CAAC;MAC/B,IAAG,IAAI,CAACV,QAAQ,IAAI,mBAAmB,EAAC;QACtC,IAAI,CAACW,MAAM,EAAE;;IAEnB,CAAC,CAAC;EAMJ;EACAA,MAAM;IACJJ,cAAc,CAACK,KAAK,EAAE;IACtB,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EAC5B;;AA3CWpB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCTpCC,4BAAM;MAIUA,gCACJ;MAAAA,iBAAK;MACLA,0BAAI;MACuCA;QAAA;MAAA,EAA0B;MAAjEA,iBAAkE;MAG1EA,0BAAI;MAEIA,+BACJ;MAAAA,iBAAK;MACLA,2BAAI;MACuCA;QAAA;MAAA,EAA0B;MAAjEA,iBAAkE;MAG1EA,2BAAI;MAEIA,uCACJ;MAAAA,iBAAK;MACLA,2BAAI;MAC0CA;QAAA;MAAA,EAA6B;MAAvEA,iBAAwE;MAIhFA,2BAAI;MAEYA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;MAG1DA,sBAAI;MACJA,2BAAI;MAEmBA,qBAAI;MAAAA,iBAAI;MAACA,sBAAI;MAChCA,iBAAK;MAIjBA,aACA;MAAAA,sBAAI;MACJA,aACA;;;MApCuDA,eAA0B;MAA1BA,0CAA0B;MAQ1BA,eAA0B;MAA1BA,0CAA0B;MAQvBA,eAA6B;MAA7BA,6CAA6B;MAiBvFA,gBACA;MADAA,6CACA;MACAA,eACA;MADAA,+CACA","names":["ChangePasswordComponent","constructor","userService","router","ngOnInit","changePassword","errMsg","response","repeat_password","new_password","old_password","passwordRegex","test","username","sessionStorage","getItem","subscribe","resp","logout","clear","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\change-password\\change-password.component.ts","C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\change-password\\change-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router) { }\n  repeat_password: string| null = \"\";\n  new_password: string| null = \"\";\n  old_password: string| null = \"\";\n  errMsg: string| null = \"\";\n  response: string|null = \"\";\n  ngOnInit(): void {\n  }\n\n  changePassword(){\n    this.errMsg = \"\";\n    this.response = \"\";\n    if(this.repeat_password == \"\" || this.new_password == \"\" || this.old_password == \"\"){\n      this.errMsg = \"Enter all fields!\";\n      return;\n    }\n    if(this.new_password != this.repeat_password){\n      this.errMsg = \"Passwords dont match!\";\n      return;\n    }\n    const passwordRegex: RegExp = /^(?=.*[A-Z])(?=.*[@$!%*?&])(?=.*\\d)[A-Za-z][A-Za-z\\d@$!%*?&]{7,15}$/\n    if(!passwordRegex.test(this.new_password)){\n      this.errMsg = \"Passwords in wrong format!\";\n      return;\n    }\n    let username = sessionStorage.getItem('username');\n    this.userService.changePassword(this.old_password,username, this.new_password).subscribe((resp)=>{\n        this.response = resp['message'];\n        if(this.response == \"Password changed!\"){\n          this.logout();\n        }\n    })\n   \n\n    \n\n\n  }\n  logout(){\n    sessionStorage.clear();\n    this.router.navigate(['']);\n  }\n\n}\n","<form>\n    <table>\n        <tr>\n            <td>\n                Old passoword:\n            </td>\n            <td>\n                <input type=\"text\" name=\"old_password\" [(ngModel)]=\"old_password\">\n            </td>\n        </tr>\n        <tr>\n            <td>\n                New password: \n            </td>\n            <td>\n                <input type=\"text\" name=\"new_password\" [(ngModel)]=\"new_password\">\n            </td>\n        </tr>\n        <tr>\n            <td>\n                Repeat new password: \n            </td>\n            <td>\n                <input type=\"text\" name=\"repeat_password\" [(ngModel)]=\"repeat_password\">\n            </td>\n        </tr>\n        \n        <tr>\n            <td colspan=\"2\">\n                <button (click)=\"changePassword()\">Submit</button>\n            </td>\n        </tr>\n        <hr>\n        <tr>\n            <td colspan=\"2\">\n                <a href=\"user\">Back</a> <br>\n            </td>\n        </tr>\n    </table>\n</form>\n{{errMsg}}\n<br>\n{{response}}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}