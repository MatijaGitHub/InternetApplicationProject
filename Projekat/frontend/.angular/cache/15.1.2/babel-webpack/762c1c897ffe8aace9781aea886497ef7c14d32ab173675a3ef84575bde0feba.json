{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WorkshopService {\n  constructor(http) {\n    this.http = http;\n  }\n  get_all_workshops() {\n    return this.http.get('http://localhost:4000/workshops/get_all_workshops');\n  }\n  get_filter_workshops(nameForm, placeForm) {\n    const data = {\n      name: nameForm,\n      place: placeForm\n    };\n    return this.http.post('http://localhost:4000/workshops/get_filter_workshops', data);\n  }\n  get_top_5() {\n    return this.http.get('http://localhost:4000/workshops/get_top_5');\n  }\n  getWorkshopsByParticipation(usernameForm, p_flag) {\n    const data = {\n      username: usernameForm,\n      participated: p_flag\n    };\n    return this.http.post('http://localhost:4000/workshops/getWorkshops', data);\n  }\n  getWorkshopsByOrganizator(usernameForm) {\n    const data = {\n      username: usernameForm\n    };\n    return this.http.post('http://localhost:4000/workshops/getOrganizatorWorkshops', data);\n  }\n  getWorkshopsByLikes(usernameForm) {\n    const data = {\n      username: usernameForm\n    };\n    return this.http.post('http://localhost:4000/workshops/getWorkshopByLikes', data);\n  }\n  getWorkshopCommentsByUser(usernameForm) {\n    const data = {\n      username: usernameForm\n    };\n    return this.http.post('http://localhost:4000/workshops/getWorkshopCommentsByUser', data);\n  }\n  unlikeWorkshop(usernameForm, workshopIdForm) {\n    const data = {\n      username: usernameForm,\n      workshopId: workshopIdForm\n    };\n    return this.http.post('http://localhost:4000/workshops/unlikeWorkshop', data);\n  }\n  editComment(usernameForm, workshopIdForm, commentForm) {\n    const data = {\n      username: usernameForm,\n      workshopId: workshopIdForm,\n      comment: commentForm\n    };\n    return this.http.post('http://localhost:4000/workshops/editComment', data);\n  }\n  deleteComment(usernameForm, workshopIdForm) {\n    const data = {\n      username: usernameForm,\n      workshopId: workshopIdForm\n    };\n    return this.http.post('http://localhost:4000/workshops/deleteComment', data);\n  }\n  cancelParticipation(usernameForm, workshopIdForm) {\n    const data = {\n      username: usernameForm,\n      workshopId: workshopIdForm\n    };\n    return this.http.post('http://localhost:4000/workshops/cancelParticipation', data);\n  }\n  getWorkshopById(idForm) {\n    const data = {\n      id: idForm\n    };\n    return this.http.post('http://localhost:4000/workshops/getWorkshopById', data);\n  }\n  getGalleryPics(wid) {\n    const data = {\n      workshopId: wid\n    };\n    return this.http.post('http://localhost:4000/workshops/getGalleryPics', data);\n  }\n  applyForWorkshop(usernameForm, wid) {\n    const data = {\n      workshopId: wid,\n      username: usernameForm\n    };\n    return this.http.post('http://localhost:4000/workshops/applyForWorkshop', data);\n  }\n  addToWaitList(usernameForm, wid, emailUser) {\n    const data = {\n      workshopId: wid,\n      username: usernameForm,\n      email: emailUser\n    };\n    return this.http.post('http://localhost:4000/workshops/addToWaitList', data);\n  }\n  isApplied(usernameForm, wid) {\n    const data = {\n      workshopId: wid,\n      username: usernameForm\n    };\n    return this.http.post('http://localhost:4000/workshops/isApplied', data);\n  }\n  getChat(usernameForm, wid) {\n    const data = {\n      workshopId: wid,\n      username: usernameForm\n    };\n    return this.http.post('http://localhost:4000/workshops/getChat', data);\n  }\n  postMessageToChat(usernameUserForm, usernameOrgForm, usernameSenderForm, messageForm, wid) {\n    const data = {\n      workshopId: wid,\n      usernameOrganizer: usernameOrgForm,\n      usernameUser: usernameUserForm,\n      usernameSender: usernameSenderForm,\n      message: messageForm\n    };\n    return this.http.post('http://localhost:4000/workshops/postMessageToChat', data);\n  }\n  likeWorkshop(usernameForm, workshopIdForm) {\n    const data = {\n      username: usernameForm,\n      workshopId: workshopIdForm\n    };\n    return this.http.post('http://localhost:4000/workshops/likeWorkshop', data);\n  }\n  isLiked(usernameForm, workshopIdForm) {\n    const data = {\n      username: usernameForm,\n      workshopId: workshopIdForm\n    };\n    return this.http.post('http://localhost:4000/workshops/isLiked', data);\n  }\n  getAllComments(workshopIdForm) {\n    const data = {\n      workshopId: workshopIdForm\n    };\n    return this.http.post('http://localhost:4000/workshops/getAllComments', data);\n  }\n  addComment(usernameForm, workshopIdForm, commentForm) {\n    const data = {\n      username: usernameForm,\n      workshopId: workshopIdForm,\n      comment: commentForm\n    };\n    return this.http.post('http://localhost:4000/workshops/addComment', data);\n  }\n  suggestWorkshop(formData) {\n    return this.http.post('http://localhost:4000/workshops/suggestWorkshop', formData);\n  }\n  editWorkshop(formData) {\n    return this.http.post('http://localhost:4000/workshops/editWorkshop', formData);\n  }\n  uploadImagesForWorkshop(formData) {\n    return this.http.post('http://localhost:4000/workshops/uploadImagesForWorkshop', formData);\n  }\n  getChatsByWorkshop(workshopIdForm) {\n    const data = {\n      workshopId: workshopIdForm\n    };\n    return this.http.post('http://localhost:4000/workshops/getChatsByWorkshop', data);\n  }\n  deleteGalleryImg(widForm, pictureForm) {\n    const data = {\n      workshopId: widForm,\n      galleryPicture: pictureForm\n    };\n    return this.http.post('http://localhost:4000/workshops/deleteGalleryImg', data);\n  }\n  getApplications(widForm) {\n    const data = {\n      workshopId: widForm\n    };\n    return this.http.post('http://localhost:4000/workshops/getApplications', data);\n  }\n  acceptApplication(widForm, usernameForm) {\n    const data = {\n      workshopId: widForm,\n      username: usernameForm\n    };\n    return this.http.post(\"http://localhost:4000/workshops/acceptApplication\", data);\n  }\n}\nWorkshopService.ɵfac = function WorkshopService_Factory(t) {\n  return new (t || WorkshopService)(i0.ɵɵinject(i1.HttpClient));\n};\nWorkshopService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WorkshopService,\n  factory: WorkshopService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["WorkshopService","constructor","http","get_all_workshops","get","get_filter_workshops","nameForm","placeForm","data","name","place","post","get_top_5","getWorkshopsByParticipation","usernameForm","p_flag","username","participated","getWorkshopsByOrganizator","getWorkshopsByLikes","getWorkshopCommentsByUser","unlikeWorkshop","workshopIdForm","workshopId","editComment","commentForm","comment","deleteComment","cancelParticipation","getWorkshopById","idForm","id","getGalleryPics","wid","applyForWorkshop","addToWaitList","emailUser","email","isApplied","getChat","postMessageToChat","usernameUserForm","usernameOrgForm","usernameSenderForm","messageForm","usernameOrganizer","usernameUser","usernameSender","message","likeWorkshop","isLiked","getAllComments","addComment","suggestWorkshop","formData","editWorkshop","uploadImagesForWorkshop","getChatsByWorkshop","deleteGalleryImg","widForm","pictureForm","galleryPicture","getApplications","acceptApplication","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\workshop.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkshopService {\n\n  constructor(private http: HttpClient) { }\n\n  get_all_workshops(){\n    return this.http.get('http://localhost:4000/workshops/get_all_workshops');\n  }\n  get_filter_workshops(nameForm, placeForm){\n    const data = {\n      name: nameForm,\n      place: placeForm\n    }\n    return this.http.post('http://localhost:4000/workshops/get_filter_workshops', data);\n  }\n  get_top_5(){\n    return this.http.get('http://localhost:4000/workshops/get_top_5');\n  }\n  getWorkshopsByParticipation(usernameForm, p_flag){\n    const data = {\n      username : usernameForm,\n      participated : p_flag\n    }\n    return this.http.post('http://localhost:4000/workshops/getWorkshops' , data);\n  }\n  getWorkshopsByOrganizator(usernameForm){\n    const data = {\n      username: usernameForm\n    }\n    return this.http.post('http://localhost:4000/workshops/getOrganizatorWorkshops' , data);\n  }\n  getWorkshopsByLikes(usernameForm){\n    const data = {\n      username : usernameForm\n    }\n    return this.http.post('http://localhost:4000/workshops/getWorkshopByLikes' , data);\n  }\n  getWorkshopCommentsByUser(usernameForm){\n    const data = {\n      username : usernameForm\n    }\n    return this.http.post('http://localhost:4000/workshops/getWorkshopCommentsByUser' , data);\n  }\n  unlikeWorkshop(usernameForm, workshopIdForm){\n    const data = {\n      username : usernameForm,\n      workshopId : workshopIdForm\n    }\n    return this.http.post('http://localhost:4000/workshops/unlikeWorkshop', data);\n  }\n  editComment(usernameForm, workshopIdForm, commentForm){\n    const data = {\n      username : usernameForm,\n      workshopId : workshopIdForm,\n      comment : commentForm\n    }\n    return this.http.post('http://localhost:4000/workshops/editComment', data);\n  }\n  deleteComment(usernameForm, workshopIdForm){\n    const data = {\n      username : usernameForm,\n      workshopId : workshopIdForm\n    }\n    return this.http.post('http://localhost:4000/workshops/deleteComment', data);\n  }\n  cancelParticipation(usernameForm, workshopIdForm){\n    const data = {\n      username : usernameForm,\n      workshopId : workshopIdForm\n    }\n    return this.http.post('http://localhost:4000/workshops/cancelParticipation', data);\n  }\n  getWorkshopById(idForm){\n    const data = {\n      id: idForm\n    }\n    return this.http.post('http://localhost:4000/workshops/getWorkshopById', data);\n  }\n  getGalleryPics(wid){\n    const data = {\n      workshopId : wid\n    }\n    return this.http.post('http://localhost:4000/workshops/getGalleryPics', data);\n  }\n  applyForWorkshop(usernameForm, wid){\n    const data = {\n      workshopId : wid,\n      username : usernameForm\n    }\n    return this.http.post('http://localhost:4000/workshops/applyForWorkshop', data);\n  }\n  addToWaitList(usernameForm, wid, emailUser){\n    const data = {\n      workshopId : wid,\n      username : usernameForm,\n      email : emailUser\n    }\n    return this.http.post('http://localhost:4000/workshops/addToWaitList', data);\n  }\n  isApplied(usernameForm, wid){\n    const data = {\n      workshopId : wid,\n      username : usernameForm\n    }\n    return this.http.post('http://localhost:4000/workshops/isApplied', data);\n  }\n  getChat(usernameForm, wid){\n    const data = {\n      workshopId : wid,\n      username : usernameForm\n    }\n    return this.http.post('http://localhost:4000/workshops/getChat', data);\n  }\n  postMessageToChat(usernameUserForm,usernameOrgForm,usernameSenderForm,messageForm ,wid){\n    const data = {\n      workshopId : wid,\n      usernameOrganizer : usernameOrgForm,\n      usernameUser : usernameUserForm,\n      usernameSender : usernameSenderForm,\n      message : messageForm\n    }\n    return this.http.post('http://localhost:4000/workshops/postMessageToChat', data);\n  }\n  likeWorkshop(usernameForm, workshopIdForm){\n    const data = {\n      username : usernameForm,\n      workshopId : workshopIdForm\n    }\n    return this.http.post('http://localhost:4000/workshops/likeWorkshop', data);\n  }\n  isLiked(usernameForm, workshopIdForm){\n    const data = {\n      username : usernameForm,\n      workshopId : workshopIdForm\n    }\n    return this.http.post('http://localhost:4000/workshops/isLiked', data);\n  }\n\n  getAllComments(workshopIdForm){\n    const data = {\n      workshopId : workshopIdForm\n    }\n    return this.http.post('http://localhost:4000/workshops/getAllComments', data);\n  }\n  addComment(usernameForm, workshopIdForm, commentForm){\n    const data = {\n      username : usernameForm,\n      workshopId : workshopIdForm,\n      comment : commentForm\n    }\n    return this.http.post('http://localhost:4000/workshops/addComment', data)\n  }\n  suggestWorkshop(formData){\n    return this.http.post('http://localhost:4000/workshops/suggestWorkshop', formData);\n  }\n  editWorkshop(formData){\n    return this.http.post('http://localhost:4000/workshops/editWorkshop', formData);\n  }\n  uploadImagesForWorkshop(formData){\n    return this.http.post('http://localhost:4000/workshops/uploadImagesForWorkshop', formData);\n  }\n  getChatsByWorkshop(workshopIdForm){\n    const data = {\n      workshopId : workshopIdForm\n    }\n    return this.http.post('http://localhost:4000/workshops/getChatsByWorkshop', data)\n  }\n  deleteGalleryImg(widForm, pictureForm){\n    const data = {\n      workshopId : widForm,\n      galleryPicture : pictureForm\n    }\n    return this.http.post('http://localhost:4000/workshops/deleteGalleryImg', data)\n  }\n  getApplications(widForm){\n    const data = {\n      workshopId : widForm,\n    }\n    return this.http.post('http://localhost:4000/workshops/getApplications', data)\n  }\n  acceptApplication(widForm, usernameForm){\n    const data = {\n      workshopId : widForm,\n      username : usernameForm\n    }\n    return this.http.post(\"http://localhost:4000/workshops/acceptApplication\", data);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}