{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../workshop.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatComponent_div_0_tr_2_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r3.message);\n  }\n}\nfunction ChatComponent_div_0_tr_2_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r3.message, \"\");\n  }\n}\nfunction ChatComponent_div_0_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtemplate(2, ChatComponent_div_0_tr_2_p_2_Template, 2, 1, \"p\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, ChatComponent_div_0_tr_2_p_4_Template, 2, 1, \"p\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r3.user != ctx_r1.usernameRight);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r3.user == ctx_r1.usernameRight);\n  }\n}\nfunction ChatComponent_div_0_a_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9);\n    i0.ɵɵtext(1, \"Back\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"table\");\n    i0.ɵɵtemplate(2, ChatComponent_div_0_tr_2_Template, 5, 2, \"tr\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\")(4, \"tr\")(5, \"td\")(6, \"input\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_div_0_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.messageToSend = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_0_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.sendMessage());\n    });\n    i0.ɵɵtext(9, \"Send\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵtemplate(11, ChatComponent_div_0_a_11_Template, 2, 0, \"a\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.chat.messages);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.messageToSend);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.fromUser);\n  }\n}\nexport class ChatComponent {\n  constructor(workshopService) {\n    this.workshopService = workshopService;\n    this.fromUser = true;\n    this.messageToSend = \"\";\n  }\n  ngOnInit() {\n    this.usernameRight = this.usernameTo;\n    if (this.fromUser == true) {\n      this.usernameTo = sessionStorage.getItem('usernameTo');\n      this.usernameFrom = sessionStorage.getItem('usernameFrom');\n      this.workshopId = sessionStorage.getItem('workshopId');\n      this.usernameRight = this.usernameFrom;\n    }\n    this.workshopService.getChat(this.usernameFrom, this.workshopId).subscribe(resp => {\n      this.chat = resp;\n      console.log(this.chat.messages);\n    });\n  }\n  sendMessage() {\n    if (this.messageToSend != \"\") {\n      let usernameSender = this.chat.username1;\n      if (!this.fromUser) {\n        usernameSender = this.chat.username2;\n      }\n      console.log(usernameSender, this.chat.username1, this.chat.username2);\n      this.workshopService.postMessageToChat(this.chat.username1, this.chat.username2, usernameSender, this.messageToSend, this.chat.workshopId).subscribe(resp => {\n        this.workshopService.getChat(this.chat.username1, this.workshopId).subscribe(resp => {\n          this.chat = resp;\n          this.messageToSend = \"\";\n        });\n      });\n    } else {\n      this.messageToSend = \"\";\n    }\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.WorkshopService));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  inputs: {\n    fromUser: \"fromUser\",\n    usernameTo: \"usernameTo\",\n    usernameFrom: \"usernameFrom\",\n    workshopId: \"workshopId\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"name\", \"messageToSend\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"href\", \"/user\", 4, \"ngIf\"], [\"style\", \"display: flex; justify-content: left;text-align: left;\", 4, \"ngIf\"], [\"style\", \"display: flex; justify-content: right;text-align: right;\", 4, \"ngIf\"], [2, \"display\", \"flex\", \"justify-content\", \"left\", \"text-align\", \"left\"], [2, \"display\", \"flex\", \"justify-content\", \"right\", \"text-align\", \"right\"], [\"href\", \"/user\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ChatComponent_div_0_Template, 12, 3, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.chat.messages != null);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ChatComponent","constructor","workshopService","ngOnInit","usernameRight","usernameTo","fromUser","sessionStorage","getItem","usernameFrom","workshopId","getChat","subscribe","resp","chat","console","log","messages","sendMessage","messageToSend","usernameSender","username1","username2","postMessageToChat","selectors","inputs","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\chat\\chat.component.html","C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\chat\\chat.component.ts"],"sourcesContent":["<div *ngIf=\"chat.messages != null\">\n    <table>\n        <tr *ngFor=\"let message of chat.messages\">\n            <td>\n               <p *ngIf=\"message.user != usernameRight\" style=\"display: flex; justify-content: left;text-align: left;\">{{message.message}}</p> \n            </td>\n            <td >\n                <p *ngIf=\"message.user == usernameRight\" style=\"display: flex; justify-content: right;text-align: right;\"> {{message.message}}</p>\n                \n            </td>\n        </tr>\n    </table>\n    <table>\n        <tr>\n            <td>\n                <input type=\"text\" name=\"messageToSend\" [(ngModel)]=\"messageToSend\">\n            </td>\n            <td>\n                <button (click)=\"sendMessage()\">Send</button>\n            </td>\n        </tr>\n    </table>\n    <br>\n    <a *ngIf=\"fromUser\" href=\"/user\">Back</a>\n</div>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Chat } from '../models/chat';\nimport { WorkshopService } from '../workshop.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\nexport class ChatComponent implements OnInit {\n\n  constructor(private workshopService: WorkshopService) { }\n\n\n  @Input() fromUser : boolean | null = true;\n  @Input() usernameTo: string;\n  @Input() usernameFrom: string;\n  @Input() workshopId: string;\n  usernameRight : string;\n  messageToSend: string | null = \"\";\n  chat: Chat;\n  ngOnInit(): void {\n    this.usernameRight = this.usernameTo;\n    if(this.fromUser == true){\n      this.usernameTo = sessionStorage.getItem('usernameTo');\n      this.usernameFrom = sessionStorage.getItem('usernameFrom');\n      this.workshopId = sessionStorage.getItem('workshopId');\n      this.usernameRight = this.usernameFrom;\n     \n    }\n  \n    this.workshopService.getChat(this.usernameFrom, this.workshopId).subscribe((resp)=>{\n      this.chat = resp as Chat;\n      console.log(this.chat.messages)\n    })\n  }\n  sendMessage(){\n    if(this.messageToSend != \"\"){\n      let usernameSender = this.chat.username1;\n      if(!this.fromUser){\n        usernameSender = this.chat.username2;\n      }\n      console.log(usernameSender, this.chat.username1, this.chat.username2);\n      this.workshopService.postMessageToChat(this.chat.username1, this.chat.username2,usernameSender,this.messageToSend,this.chat.workshopId).subscribe((resp)=>{\n        this.workshopService.getChat(this.chat.username1, this.workshopId).subscribe((resp)=>{\n          this.chat = resp as Chat;\n          this.messageToSend = \"\"\n        })\n      })\n    }\n    else{\n      this.messageToSend = \"\"\n    }\n\n \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}