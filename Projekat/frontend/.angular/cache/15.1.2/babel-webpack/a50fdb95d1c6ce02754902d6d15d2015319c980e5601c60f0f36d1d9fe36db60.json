{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../workshop.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatComponent_tr_1_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(message_r2.message);\n  }\n}\nfunction ChatComponent_tr_1_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r2.message, \"\");\n  }\n}\nfunction ChatComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtemplate(2, ChatComponent_tr_1_p_2_Template, 2, 1, \"p\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, ChatComponent_tr_1_p_4_Template, 2, 1, \"p\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r2.user == ctx_r0.usernameFrom);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r2.user == ctx_r0.usernameTo);\n  }\n}\nfunction ChatComponent_a_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 8);\n    i0.ɵɵtext(1, \"Back\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ChatComponent {\n  constructor(workshopService) {\n    this.workshopService = workshopService;\n    this.fromUser = true;\n    this.messageToSend = \"\";\n  }\n  ngOnInit() {\n    let usernameFromSend = this.usernameFrom;\n    if (this.fromUser == true) {\n      this.usernameTo = sessionStorage.getItem('usernameTo');\n      this.usernameFrom = sessionStorage.getItem('usernameFrom');\n      this.workshopId = sessionStorage.getItem('workshopId');\n      usernameFromSend = this.usernameTo;\n    }\n    this.workshopService.getChat(usernameFromSend, this.workshopId).subscribe(resp => {\n      this.chat = resp;\n      console.log(this.usernameFrom, this.workshopId, this.fromUser);\n      console.log(this.chat.messages);\n    });\n  }\n  sendMessage() {\n    if (this.messageToSend != \"\") {\n      let usernameSender = this.chat.username1;\n      if (!this.fromUser) {\n        usernameSender = this.chat.username2;\n      }\n      console.log(usernameSender, this.chat.username1, this.chat.username2);\n      this.workshopService.postMessageToChat(this.chat.username1, this.chat.username2, usernameSender, this.messageToSend, this.chat.workshopId).subscribe(resp => {\n        this.workshopService.getChat(this.chat.username1, this.workshopId).subscribe(resp => {\n          this.chat = resp;\n          this.messageToSend = \"\";\n        });\n      });\n    } else {\n      this.messageToSend = \"\";\n    }\n  }\n}\nChatComponent.ɵfac = function ChatComponent_Factory(t) {\n  return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.WorkshopService));\n};\nChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatComponent,\n  selectors: [[\"app-chat\"]],\n  inputs: {\n    fromUser: \"fromUser\",\n    usernameTo: \"usernameTo\",\n    usernameFrom: \"usernameFrom\",\n    workshopId: \"workshopId\"\n  },\n  decls: 11,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"name\", \"messageToSend\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"href\", \"/user\", 4, \"ngIf\"], [\"style\", \"display: flex; justify-content: left;text-align: left;\", 4, \"ngIf\"], [\"style\", \"display: flex; justify-content: right;text-align: right;\", 4, \"ngIf\"], [2, \"display\", \"flex\", \"justify-content\", \"left\", \"text-align\", \"left\"], [2, \"display\", \"flex\", \"justify-content\", \"right\", \"text-align\", \"right\"], [\"href\", \"/user\"]],\n  template: function ChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\");\n      i0.ɵɵtemplate(1, ChatComponent_tr_1_Template, 5, 2, \"tr\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\")(3, \"tr\")(4, \"td\")(5, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.messageToSend = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"td\")(7, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_7_listener() {\n        return ctx.sendMessage();\n      });\n      i0.ɵɵtext(8, \"Send\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵtemplate(10, ChatComponent_a_10_Template, 2, 0, \"a\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chat.messages);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.messageToSend);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.fromUser);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ChatComponent","constructor","workshopService","ngOnInit","usernameFromSend","usernameFrom","fromUser","usernameTo","sessionStorage","getItem","workshopId","getChat","subscribe","resp","chat","console","log","messages","sendMessage","messageToSend","usernameSender","username1","username2","postMessageToChat","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\chat\\chat.component.html","C:\\Users\\Matija Milosevic\\Downloads\\PIA\\InternetApplicationProject\\Projekat\\frontend\\src\\app\\chat\\chat.component.ts"],"sourcesContent":["<table>\n    <tr *ngFor=\"let message of chat.messages\">\n        <td>\n           <p *ngIf=\"message.user == usernameFrom\" style=\"display: flex; justify-content: left;text-align: left;\">{{message.message}}</p> \n        </td>\n        <td >\n            <p *ngIf=\"message.user == usernameTo\" style=\"display: flex; justify-content: right;text-align: right;\"> {{message.message}}</p>\n            \n        </td>\n    </tr>\n</table>\n<table>\n    <tr>\n        <td>\n            <input type=\"text\" name=\"messageToSend\" [(ngModel)]=\"messageToSend\">\n        </td>\n        <td>\n            <button (click)=\"sendMessage()\">Send</button>\n        </td>\n    </tr>\n</table>\n<br>\n<a *ngIf=\"fromUser\" href=\"/user\">Back</a>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Chat } from '../models/chat';\nimport { WorkshopService } from '../workshop.service';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\n\nexport class ChatComponent implements OnInit {\n\n  constructor(private workshopService: WorkshopService) { }\n\n\n  @Input() fromUser : boolean | null = true;\n  @Input() usernameTo: string;\n  @Input() usernameFrom: string;\n  @Input() workshopId: string;\n  messageToSend: string | null = \"\";\n  chat: Chat;\n  ngOnInit(): void {\n    let usernameFromSend = this.usernameFrom;\n    if(this.fromUser == true){\n      this.usernameTo = sessionStorage.getItem('usernameTo');\n      this.usernameFrom = sessionStorage.getItem('usernameFrom');\n      this.workshopId = sessionStorage.getItem('workshopId');\n      usernameFromSend = this.usernameTo;\n     \n    }\n  \n    this.workshopService.getChat(usernameFromSend, this.workshopId).subscribe((resp)=>{\n      this.chat = resp as Chat;\n      console.log(this.usernameFrom, this.workshopId, this.fromUser);\n      console.log(this.chat.messages)\n    })\n  }\n  sendMessage(){\n    if(this.messageToSend != \"\"){\n      let usernameSender = this.chat.username1;\n      if(!this.fromUser){\n        usernameSender = this.chat.username2;\n      }\n      console.log(usernameSender, this.chat.username1, this.chat.username2);\n      this.workshopService.postMessageToChat(this.chat.username1, this.chat.username2,usernameSender,this.messageToSend,this.chat.workshopId).subscribe((resp)=>{\n        this.workshopService.getChat(this.chat.username1, this.workshopId).subscribe((resp)=>{\n          this.chat = resp as Chat;\n          this.messageToSend = \"\"\n        })\n      })\n    }\n    else{\n      this.messageToSend = \"\"\n    }\n\n \n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}