{"ast":null,"code":"const types = require('./types');\n\nconst INTS = () => [{\n  type: types.RANGE,\n  from: 48,\n  to: 57\n}];\n\nconst WORDS = () => {\n  return [{\n    type: types.CHAR,\n    value: 95\n  }, {\n    type: types.RANGE,\n    from: 97,\n    to: 122\n  }, {\n    type: types.RANGE,\n    from: 65,\n    to: 90\n  }].concat(INTS());\n};\n\nconst WHITESPACE = () => {\n  return [{\n    type: types.CHAR,\n    value: 9\n  }, {\n    type: types.CHAR,\n    value: 10\n  }, {\n    type: types.CHAR,\n    value: 11\n  }, {\n    type: types.CHAR,\n    value: 12\n  }, {\n    type: types.CHAR,\n    value: 13\n  }, {\n    type: types.CHAR,\n    value: 32\n  }, {\n    type: types.CHAR,\n    value: 160\n  }, {\n    type: types.CHAR,\n    value: 5760\n  }, {\n    type: types.RANGE,\n    from: 8192,\n    to: 8202\n  }, {\n    type: types.CHAR,\n    value: 8232\n  }, {\n    type: types.CHAR,\n    value: 8233\n  }, {\n    type: types.CHAR,\n    value: 8239\n  }, {\n    type: types.CHAR,\n    value: 8287\n  }, {\n    type: types.CHAR,\n    value: 12288\n  }, {\n    type: types.CHAR,\n    value: 65279\n  }];\n};\n\nconst NOTANYCHAR = () => {\n  return [{\n    type: types.CHAR,\n    value: 10\n  }, {\n    type: types.CHAR,\n    value: 13\n  }, {\n    type: types.CHAR,\n    value: 8232\n  }, {\n    type: types.CHAR,\n    value: 8233\n  }];\n}; // Predefined class objects.\n\n\nexports.words = () => ({\n  type: types.SET,\n  set: WORDS(),\n  not: false\n});\n\nexports.notWords = () => ({\n  type: types.SET,\n  set: WORDS(),\n  not: true\n});\n\nexports.ints = () => ({\n  type: types.SET,\n  set: INTS(),\n  not: false\n});\n\nexports.notInts = () => ({\n  type: types.SET,\n  set: INTS(),\n  not: true\n});\n\nexports.whitespace = () => ({\n  type: types.SET,\n  set: WHITESPACE(),\n  not: false\n});\n\nexports.notWhitespace = () => ({\n  type: types.SET,\n  set: WHITESPACE(),\n  not: true\n});\n\nexports.anyChar = () => ({\n  type: types.SET,\n  set: NOTANYCHAR(),\n  not: true\n});","map":{"version":3,"names":["types","require","INTS","type","RANGE","from","to","WORDS","CHAR","value","concat","WHITESPACE","NOTANYCHAR","exports","words","SET","set","not","notWords","ints","notInts","whitespace","notWhitespace","anyChar"],"sources":["C:/Users/Matija Milosevic/Downloads/PIA/InternetApplicationProject/Projekat/frontend/node_modules/ret/lib/sets.js"],"sourcesContent":["const types = require('./types');\n\nconst INTS = () => [{ type: types.RANGE , from: 48, to: 57 }];\n\nconst WORDS = () => {\n  return [\n    { type: types.CHAR, value: 95 },\n    { type: types.RANGE, from: 97, to: 122 },\n    { type: types.RANGE, from: 65, to: 90 }\n  ].concat(INTS());\n};\n\nconst WHITESPACE = () => {\n  return [\n    { type: types.CHAR, value: 9 },\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 11 },\n    { type: types.CHAR, value: 12 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 32 },\n    { type: types.CHAR, value: 160 },\n    { type: types.CHAR, value: 5760 },\n    { type: types.RANGE, from: 8192, to: 8202 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n    { type: types.CHAR, value: 8239 },\n    { type: types.CHAR, value: 8287 },\n    { type: types.CHAR, value: 12288 },\n    { type: types.CHAR, value: 65279 }\n  ];\n};\n\nconst NOTANYCHAR = () => {\n  return [\n    { type: types.CHAR, value: 10 },\n    { type: types.CHAR, value: 13 },\n    { type: types.CHAR, value: 8232 },\n    { type: types.CHAR, value: 8233 },\n  ];\n};\n\n// Predefined class objects.\nexports.words = () => ({ type: types.SET, set: WORDS(), not: false });\nexports.notWords = () => ({ type: types.SET, set: WORDS(), not: true });\nexports.ints = () => ({ type: types.SET, set: INTS(), not: false });\nexports.notInts = () => ({ type: types.SET, set: INTS(), not: true });\nexports.whitespace = () => ({ type: types.SET, set: WHITESPACE(), not: false });\nexports.notWhitespace = () => ({ type: types.SET, set: WHITESPACE(), not: true });\nexports.anyChar = () => ({ type: types.SET, set: NOTANYCHAR(), not: true });\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}